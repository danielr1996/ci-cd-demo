name: library/build
on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      prerelease:
        default: true
        type: boolean
      changelog:
        default: ""
        type: string
jobs:
  docker:
    strategy:
      fail-fast: false
      matrix:
        component: [ frontend,backend ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}
      - uses: docker/setup-buildx-action@v3
        with:
          driver: remote
          endpoint: tcp://buildkit.danielrichter.codes:1234
          buildkitd-flags: --debug
        env:
          BUILDER_NODE_0_AUTH_TLS_CACERT: ${{ secrets.BUILDKIT_CA }}
          BUILDER_NODE_0_AUTH_TLS_CERT: ${{ secrets.BUILDKIT_CERT }}
          BUILDER_NODE_0_AUTH_TLS_KEY: ${{ secrets.BUILDKIT_KEY }}
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Run danielrichter.codes/now@v1
        run: echo "NOW=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository }}/${{ matrix.component }}
          tags: |
            type=raw,value=${{ inputs.tag }}
            type=raw,value=latest
            type=raw,value=${{ github.sha }}
      - uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.component }}
          platforms: arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          provenance: false
          build-args: |
            VERSION=${{ inputs.tag }}
            REVISION=${{ github.sha }}
            DATE=${{ env.NOW }}
  helm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}
      - uses: azure/setup-helm@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Temporarily set chart version to current version
        uses: mikefarah/yq@master
        with:
          cmd: |
            export VERSION="${{ inputs.tag }}"
            for file in chart/Chart.yaml backend/chart/Chart.yaml frontend/chart/Chart.yaml; do
              yq -i '
              .version = strenv(VERSION) |
              .appVersion = strenv(VERSION) |
              (.dependencies[] | select(.name == "backend" or .name == "frontend")| .version) = strenv(VERSION)
              ' $file
            done
      - run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login -u ${{ github.actor }}  --password-stdin ghcr.io
          helm dependency update chart
          helm package chart -d dist
          helm push dist/ci-cd-demo-${{ inputs.tag }}.tgz oci://ghcr.io/${{ github.repository_owner }}
  release:
    runs-on: ubuntu-latest
    needs: [docker, helm]
    steps:
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ inputs.tag }}
          prerelease: ${{ inputs.prerelease }}
          body: ${{ inputs.changelog }}